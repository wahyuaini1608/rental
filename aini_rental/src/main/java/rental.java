import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author LAB-RPL1
 */
public class rental extends javax.swing.JFrame {
    Connection koneksi;
    String id ="";
    /**
     * Creates new form NewJFrame
     */
    public rental() {
        initComponents();
        koneksi();
        tampil();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        nama = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        alamat = new javax.swing.JTextArea();
        telepon = new javax.swing.JTextField();
        judul = new javax.swing.JTextField();
        jenis = new javax.swing.JComboBox<>();
        lama = new javax.swing.JSpinner();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabel = new javax.swing.JTable();
        simpan = new javax.swing.JButton();
        edit = new javax.swing.JButton();
        hapus = new javax.swing.JButton();
        clear = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setText("Rental DVD");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 20, -1, -1));

        jLabel2.setText("Nama Peminjam");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 60, -1, -1));

        jLabel3.setText("Alamat");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 90, -1, -1));

        jLabel4.setText("Telepon");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 190, -1, -1));

        jLabel5.setText("Judul DVD");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 220, -1, -1));

        jLabel6.setText("Jenis DVD");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 250, -1, -1));

        jLabel7.setText("Lama Meminjam");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 280, -1, -1));
        getContentPane().add(nama, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 60, 230, -1));

        alamat.setColumns(20);
        alamat.setRows(5);
        jScrollPane1.setViewportView(alamat);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 90, -1, -1));
        getContentPane().add(telepon, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 190, 230, -1));
        getContentPane().add(judul, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 220, 230, -1));

        jenis.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "film", "tutorial", "software" }));
        getContentPane().add(jenis, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 250, 230, -1));
        getContentPane().add(lama, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 280, 230, -1));

        tabel.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "NO", "Nama", "Alamat", "Telepon", "Judul DVD", "Jenis DVD", "Lama Meminjam"
            }
        ));
        jScrollPane2.setViewportView(tabel);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 340, 730, 90));

        simpan.setText("Simpan");
        simpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                simpanActionPerformed(evt);
            }
        });
        getContentPane().add(simpan, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 70, -1, -1));

        edit.setText("Edit");
        edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editActionPerformed(evt);
            }
        });
        getContentPane().add(edit, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 100, 70, -1));

        hapus.setText("Hapus");
        hapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hapusActionPerformed(evt);
            }
        });
        getContentPane().add(hapus, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 130, -1, -1));

        clear.setText("Clear");
        clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearActionPerformed(evt);
            }
        });
        getContentPane().add(clear, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 160, 70, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void simpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_simpanActionPerformed
       if(id == ""){
        create();
       }else{
           update();
       }
    }//GEN-LAST:event_simpanActionPerformed

    private void editActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editActionPerformed
       edit();
    }//GEN-LAST:event_editActionPerformed

    private void hapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hapusActionPerformed
       hapus();
    }//GEN-LAST:event_hapusActionPerformed

    private void clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearActionPerformed
        clear();
    }//GEN-LAST:event_clearActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(rental.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(rental.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(rental.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(rental.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new rental().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea alamat;
    private javax.swing.JButton clear;
    private javax.swing.JButton edit;
    private javax.swing.JButton hapus;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JComboBox<String> jenis;
    private javax.swing.JTextField judul;
    private javax.swing.JSpinner lama;
    private javax.swing.JTextField nama;
    private javax.swing.JButton simpan;
    private javax.swing.JTable tabel;
    private javax.swing.JTextField telepon;
    // End of variables declaration//GEN-END:variables
private void koneksi(){
    try {
        String server = "jdbc:mysql://localhost:3306/aini_rental";
        String user = "root";
        String pass = "";
        
        DriverManager.registerDriver(new com.mysql.cj.jdbc.Driver());
        koneksi = DriverManager.getConnection(server, user, pass);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }

}
private void tampil(){
    DefaultTableModel data = (DefaultTableModel) tabel.getModel();
    data.setRowCount(0);
    try {
        String sql = "SELECT * FROM tb_dvd";
        ResultSet res = koneksi.createStatement().executeQuery(sql);
         while (res.next()) {
                data.addRow(new Object[] {
                res.getString(1), res.getString(2),
                res.getString(3),res.getString(4),
                res.getString(5),res.getString(6),
                res.getString(7)});
            }
            tabel.setModel(data);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }

private void create(){
 
    try {
        String sql = "INSERT INTO tb_dvd VALUES (null,"
                + "'" + nama.getText() + "',"
                + "'" + alamat.getText() + "',"
                + "'" + telepon.getText() + "',"
                + "'" + judul.getText() + "',"
                + "'" + jenis.getSelectedItem().toString() + "',"
               + "'" + lama.getValue().toString()+"')";
        int res = koneksi.createStatement().executeUpdate(sql);
        
        if (res > -1) {
            tampil();
            nama.setText("");
            alamat.setText("");
            telepon.setText("");
            judul.setText("");
            jenis.setSelectedIndex(0);
            lama.setValue(0);
        }
    } catch (Exception e) {
        JOptionPane.showMessageDialog(null, e);
    }
}
private void hapus(){
    int row = tabel.getSelectedRow();
    String id = tabel.getModel().getValueAt(row, 0).toString();
    try {
        String sql = "DELETE FROM tb_dvd WHERE id = "+id;
        int res = koneksi.createStatement().executeUpdate(sql);
        
        if (res > -1) {
            tampil();
        }
    } catch (Exception e) {
        JOptionPane.showMessageDialog(null, e);
    }
}

private void edit(){
    int row = tabel.getSelectedRow();
    String id_rental = tabel.getModel().getValueAt(row, 0).toString();
    
    try {
        String sql = "SELECT * FROM tb_dvd WHERE id =" +id_rental;
        ResultSet res = koneksi.createStatement().executeQuery(sql);
         while (res.next()) {
             id = id_rental;
             nama.setText(res.getString(2));
             alamat.setText(res.getString(3));
             telepon.setText(res.getString(4));
             judul.setText(res.getString(5));
             jenis.setSelectedItem(res.getString(6));
             lama.setValue(res.getInt(7));
             
             edit.setEnabled(false);
            }
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
}

private void clear(){
   id = "";
   nama.setText("");
   alamat.setText("");
   telepon.setText("");
   judul.setText("");
   jenis.setSelectedIndex(0);
   lama.setValue(0);
   
   edit.setEnabled(true);
}

private void update(){
 
    try {
        String sql = "UPDATE tb_dvd SET "
                + "nama_lengkap = '" + nama.getText() + "',"
                + "alamat = '" + alamat.getText() + "',"
                + "telepon = '" + telepon.getText() + "',"
                + "judul_dvd = '" + judul.getText() + "',"
                + "jenis_dvd = '" + jenis.getSelectedItem().toString() + "',"
                + "lama_meminjam = '" + lama.getValue().toString()+"' "
                + "WHERE id="+id;
        int res = koneksi.createStatement().executeUpdate(sql);
        
        if (res > -1) {
            tampil();
            clear();
            
        }
    } catch (Exception e) {
        JOptionPane.showMessageDialog(null, e);
    }
}
}